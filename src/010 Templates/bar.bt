//--------------------------------------
//--- 010 Editor v3.1 Binary Template
//
// File:    bar.bt
// Author:  Petar Tasev
// Revision:1.0
// Purpose: Highlight bar files from AoM game.
//--------------------------------------
LittleEndian();
SetBackColor(cLtGray);

struct HEADER
{
    uint magic <comment="always 0">;
    uint version <comment="always 0">;
    uint crc <comment="adler32 on everything after header">;
    int fileCount;
    int definitionsLength;
    int definitionsOffset;
    uint flags;
} header;

FSeek(header.definitionsOffset);
int entryOffsets[header.fileCount];
local int64 entriesOffset = header.definitionsOffset + header.fileCount * 4;

local int i;
for (i = 0; i < header.fileCount; ++i)
{
    FSeek(entryOffsets[i] + entriesOffset);
    struct Entry
    {
        int offset <bgcolor=cLtGreen>;
        int length;
        int length2; // always expected to match length

        if (length2 != length)
        {
            // in Alpha bar files length2 does not exist
            FSeek(FTell() - 4);
        }
        
        int16 year;
        byte month;
        byte day;
        byte hour;
        byte minute;
        byte second;
        byte pad;
        
        string fileName <bgcolor=cLtPurple>;

        local int64 currentPos = FTell();    
        FSeek(offset);
        byte data[length] <bgcolor=cLtRed>;
        FSeek(currentPos);
    } entry <bgcolor=cLtBlue,read=entryName,optimize=false>;
}

string entryName(Entry &entry)
{
    return entry.fileName;
}